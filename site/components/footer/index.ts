/**
 * # TOC Menu
 * 
 * Component that takes the Toc tree structure and outputs a navigatable tree.
 */
import { html } from '../../../src/templates/html'
import { Toc, TocEntry, findPreviousAndNextTocEntries } from '../../../src/templates/toc'
import { TemplateContext, relLink } from '../../../src/templates/template'
/**
 * Output a `span` or plain text for the page title. If the page has a 
 * description, it's shown in the tooltip.
 */
const caption = (next: boolean) => next ? "Next" : "Previous"

const footerButton = (next: boolean, relFileName: string, 
    entry: TocEntry | null) =>
    entry ?
        html`<a class="footer-button" href="${relLink(relFileName, entry.file)}">
            <p>${caption(next)}</p>
            <p>${next ? entry.page + " »" : "« " + entry.page}</p>
        </a>` :
        html`<a class="footer-button disabled">
            ${caption(next)}
        </a>`


export default (ctx: TemplateContext) => {
    ctx.require(__dirname, "./footer.css")
    let [prev, next] = findPreviousAndNextTocEntries(ctx.toc, ctx.relFilePath)
    return html`
        <div class="footer">
            ${footerButton(false, ctx.relFilePath, prev)}
            <div class="footer-text">
                <p>${ctx.frontMatter.footer}</p>
                <p>Generated by 
                    <a href="https://johtela.github.io/litscript">LiTScript</a>
                </p>
            </div>
            ${footerButton(true, ctx.relFilePath, next)}
        </div>
    `
}