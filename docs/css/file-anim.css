/*!********************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/extras/file-anim.less ***!
  \********************************************************************************************************************/
.digraph .node {
  transition: fill 0.5s;
  fill: #EEF;
  stroke: #889;
  stroke-width: 1.5px;
}
.digraph text {
  fill: black;
  stroke: none;
  font-size: 16px;
  font-family: var(--sans-font);
}
.digraph .arrow {
  fill: white ;
  stroke: black;
  stroke-width: 1px;
  stroke-linecap: round;
  stroke-linejoin: round;
}
.digraph .edge {
  fill: none;
  stroke: #444;
  stroke-width: 1.5px;
  stroke-linecap: round;
  stroke-linejoin: round;
}
/**
# Customizing File Diagram Icons

File icon shapes in SVG consist of multiple shapes with classes to allow 
styling each part separately. To easily customize the colors of the icons we 
define [LESS mixins][] that can be called with colors as parameters.

[LESS mixins]: http://lesscss.org/features/#mixins-feature

## Folder Icon Styles

You can customizer the following colors for folder icons:

- Folder color `@folder-color`
- Text/caption color `@folder-text-color`

The other colors used in the icon are calculated from the parameters. You can 
call the mixin in context of a style class like this:
```less
    // Example usage
    .red {
        .folder-styles(red, darkred);
    }
```
Now you can add `red` class to your folder icons to turn them red.
```ts
    // Example usage
    taitto.folder(parent, "MyDir").addClass("red")
```
### Mixin Definition
*/
/**
## Document Icon Styles

Similarily to folder icons, you can customize the following properties for 
document styles:

- Document color `@document-color`
- Title color `@document-title-color`
- Text/caption color `@document-text-color`
- Optionally you can define the title text size with `@document-title-size`

### Mixin Definition
*/
/**
## Terminal Icon Styles

Terminal icon has following customizable properties:
- Background color `@terminal-back-color`
- Titlebar color  `@terminal-title-color`
- Color of the text inside terminal `@terminal-text-color`
- Optional font size for terminal text `@terminal-text-size`

### Mixin Definition
*/
/**
## Default Styles
*/
.file-diagram text {
  stroke: none;
  font-family: Consolas, monospace;
  font-size: 16px;
  text-anchor: middle;
}
.file-diagram .container3D > * {
  transform: perspective(100px);
}
.file-diagram .folder-back {
  fill: #d4d500;
}
.file-diagram .folder-front {
  fill: #EE0;
  stroke: #d4d500;
  stroke-width: 1px;
}
.file-diagram .folder-front text {
  fill: #880;
}
.file-diagram .document {
  fill: #f8f8ff;
  stroke: #dfdfff;
  stroke-width: 1px;
}
.file-diagram .doc-bg {
  fill: #8AD;
  font-size: 32px;
}
.file-diagram .doc-text {
  fill: #889;
}
.file-diagram .terminal {
  stroke: #808080;
  fill: #000;
}
.file-diagram .terminal ellipse {
  stroke: none;
  fill: #616df3;
}
.file-diagram .terminal-text {
  fill: #1F2;
  font-size: 24px;
}
.file-diagram .title-bar {
  stroke: none;
  fill: #12D;
}
.file-diagram {
  display: block;
  margin: 32px;
  overflow: scroll;
  filter: drop-shadow(2px 2px 4px #AAA);
}
.file-diagram text {
  font-family: var(--mono-font);
  font-size: 14px;
}
.file-diagram .green .document {
  fill: #e8f0e8;
  stroke: #d9e6d9;
  stroke-width: 1px;
}
.file-diagram .green .doc-bg {
  fill: #6d9f6d;
  font-size: 32px;
}
.file-diagram .green .doc-text {
  fill: #535353;
}
.file-diagram .green .folder-back {
  fill: #d9e6d9;
}
.file-diagram .green .folder-front {
  fill: #e8f0e8;
  stroke: #d9e6d9;
  stroke-width: 1px;
}
.file-diagram .green .folder-front text {
  fill: #535353;
}
.file-diagram .caption,
.file-diagram .button {
  text-anchor: start;
  font-family: var(--sans-font);
  font-size: 16px;
}
.file-diagram .button {
  text-anchor: end;
  cursor: pointer;
  fill: #400;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NzL2ZpbGUtYW5pbS5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7RUFFUTtFQUNBO0VBQ0E7RUFDQTtBQ0FSO0FETEE7RUFRUTtFQUNBO0VBQ0E7RUFDQTtBQ0FSO0FEWEE7RUFjUTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FDQVI7QURsQkE7RUFxQlE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQ0FSO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQThCQztBQUNEOzs7Ozs7Ozs7Ozs7Q0FZQztBQUNEOzs7Ozs7Ozs7O0NBVUM7QUFDRDs7Q0FFQztBQzJCRDtFQUVRO0VBQ0E7RUFDQTtFQUNBO0FEMUJSO0FDcUJBO0VBUVE7QUQxQlI7QUNrQkE7RUE1RVE7QUQ2RFI7QUNlQTtFQXpFUTtFQUNBO0VBQ0E7QUQ2RFI7QUNVQTtFQXBFWTtBRDZEWjtBQ09BO0VBL0NRO0VBQ0E7RUFDQTtBRDJDUjtBQ0VBO0VBMUNRO0VBQ0E7QUQyQ1I7QUNGQTtFQXRDUTtBRDJDUjtBQ0xBO0VBbkJRO0VBQ0E7QUQyQlI7QUNUQTtFQWhCWTtFQUNBO0FENEJaO0FDYkE7RUFYUTtFQUNBO0FEMkJSO0FDakJBO0VBUFE7RUFDQTtBRDJCUjtBQWpJQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FBbUlKO0FBdklBO0VBT1E7RUFDQTtBQW1JUjtBQTNJQTtFQzZEUTtFQUNBO0VBQ0E7QURpRlI7QUFoSkE7RUNrRVE7RUFDQTtBRGlGUjtBQXBKQTtFQ3NFUTtBRGlGUjtBQXZKQTtFQ2dDUTtBRDBIUjtBQTFKQTtFQ21DUTtFQUNBO0VBQ0E7QUQwSFI7QUEvSkE7RUN3Q1k7QUQwSFo7QUFsS0E7O0VBb0JRO0VBQ0E7RUFDQTtBQWtKUjtBQXhLQTtFQTBCUTtFQUNBO0VBQ0E7QUFpSlIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXRzY3JpcHQvLi9ub2RlX21vZHVsZXMvdGFpdHRvL3N0eWxlcy9kaWdyYXBoLmxlc3MiLCJ3ZWJwYWNrOi8vbGl0c2NyaXB0Ly4vc3JjL2V4dHJhcy9maWxlLWFuaW0ubGVzcyIsIndlYnBhY2s6Ly9saXRzY3JpcHQvLi9ub2RlX21vZHVsZXMvdGFpdHRvL3N0eWxlcy9maWxlLWRpYWdyYW0ubGVzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIuZGlncmFwaCB7XG4gICAgLm5vZGUge1xuICAgICAgICB0cmFuc2l0aW9uOiBmaWxsIDAuNXM7XG4gICAgICAgIGZpbGw6ICNFRUY7XG4gICAgICAgIHN0cm9rZTogIzg4OTtcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAxLjVweDtcbiAgICB9XG4gICAgdGV4dCB7XG4gICAgICAgIGZpbGw6IGJsYWNrO1xuICAgICAgICBzdHJva2U6IG5vbmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhcigtLXNhbnMtZm9udCk7XG4gICAgfVxuICAgIC5hcnJvdyB7XG4gICAgICAgIGZpbGw6IHdoaXRlIDsgXG4gICAgICAgIHN0cm9rZTogYmxhY2s7XG4gICAgICAgIHN0cm9rZS13aWR0aDogMXB4O1xuICAgICAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG4gICAgICAgIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XG4gICAgfVxuICAgIC5lZGdlIHtcbiAgICAgICAgZmlsbDogbm9uZTtcbiAgICAgICAgc3Ryb2tlOiAjNDQ0O1xuICAgICAgICBzdHJva2Utd2lkdGg6IDEuNXB4O1xuICAgICAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG4gICAgICAgIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XG4gICAgfVxufSIsIkBpbXBvcnQgXCJ+dGFpdHRvL3N0eWxlcy90YWl0dG8ubGVzc1wiO1xuXG4uZmlsZS1kaWFncmFtIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDMycHg7XG4gICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggNHB4ICNBQUEpO1xuXG4gICAgdGV4dCB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1tb25vLWZvbnQpO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgLmdyZWVuIHtcbiAgICAgICAgQGNvbDogI2U4ZjBlODtcbiAgICAgICAgQHRleHQ6IGRlc2F0dXJhdGUoZGFya2VuKEBjb2wsIDYwJSksIDQwJSk7XG4gICAgICAgIEBobDogZGFya2VuKEBjb2wsIDQwJSk7XG4gICAgICAgIC5kb2N1bWVudC1zdHlsZXMoQGNvbCwgQGhsLCBAdGV4dCk7XG4gICAgICAgIC5mb2xkZXItc3R5bGVzKEBjb2wsIEB0ZXh0KTtcbiAgICB9XG5cbiAgICAuY2FwdGlvbiwgLmJ1dHRvbiB7XG4gICAgICAgIHRleHQtYW5jaG9yOiBzdGFydDtcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhcigtLXNhbnMtZm9udCk7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbiAgICAuYnV0dG9uIHtcbiAgICAgICAgdGV4dC1hbmNob3I6IGVuZDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBmaWxsOiAjNDAwO1xuICAgIH1cbn0iLCIvKipcbiMgQ3VzdG9taXppbmcgRmlsZSBEaWFncmFtIEljb25zXG5cbkZpbGUgaWNvbiBzaGFwZXMgaW4gU1ZHIGNvbnNpc3Qgb2YgbXVsdGlwbGUgc2hhcGVzIHdpdGggY2xhc3NlcyB0byBhbGxvdyBcbnN0eWxpbmcgZWFjaCBwYXJ0IHNlcGFyYXRlbHkuIFRvIGVhc2lseSBjdXN0b21pemUgdGhlIGNvbG9ycyBvZiB0aGUgaWNvbnMgd2UgXG5kZWZpbmUgW0xFU1MgbWl4aW5zXVtdIHRoYXQgY2FuIGJlIGNhbGxlZCB3aXRoIGNvbG9ycyBhcyBwYXJhbWV0ZXJzLlxuXG5bTEVTUyBtaXhpbnNdOiBodHRwOi8vbGVzc2Nzcy5vcmcvZmVhdHVyZXMvI21peGlucy1mZWF0dXJlXG5cbiMjIEZvbGRlciBJY29uIFN0eWxlc1xuXG5Zb3UgY2FuIGN1c3RvbWl6ZXIgdGhlIGZvbGxvd2luZyBjb2xvcnMgZm9yIGZvbGRlciBpY29uczpcblxuLSBGb2xkZXIgY29sb3IgYEBmb2xkZXItY29sb3JgXG4tIFRleHQvY2FwdGlvbiBjb2xvciBgQGZvbGRlci10ZXh0LWNvbG9yYFxuXG5UaGUgb3RoZXIgY29sb3JzIHVzZWQgaW4gdGhlIGljb24gYXJlIGNhbGN1bGF0ZWQgZnJvbSB0aGUgcGFyYW1ldGVycy4gWW91IGNhbiBcbmNhbGwgdGhlIG1peGluIGluIGNvbnRleHQgb2YgYSBzdHlsZSBjbGFzcyBsaWtlIHRoaXM6XG5gYGBsZXNzXG4gICAgLy8gRXhhbXBsZSB1c2FnZVxuICAgIC5yZWQge1xuICAgICAgICAuZm9sZGVyLXN0eWxlcyhyZWQsIGRhcmtyZWQpO1xuICAgIH1cbmBgYFxuTm93IHlvdSBjYW4gYWRkIGByZWRgIGNsYXNzIHRvIHlvdXIgZm9sZGVyIGljb25zIHRvIHR1cm4gdGhlbSByZWQuXG5gYGB0c1xuICAgIC8vIEV4YW1wbGUgdXNhZ2VcbiAgICB0YWl0dG8uZm9sZGVyKHBhcmVudCwgXCJNeURpclwiKS5hZGRDbGFzcyhcInJlZFwiKVxuYGBgXG4jIyMgTWl4aW4gRGVmaW5pdGlvblxuKi9cbi5mb2xkZXItc3R5bGVzKEBmb2xkZXItY29sb3IsIEBmb2xkZXItdGV4dC1jb2xvcikge1xuICAgIEBmb2xkZXItZGFyay1jb2xvcjogZGFya2VuKEBmb2xkZXItY29sb3IsIDUlKTtcbiAgICAuZm9sZGVyLWJhY2sge1xuICAgICAgICBmaWxsOiBAZm9sZGVyLWRhcmstY29sb3I7XG4gICAgfVxuICAgIC5mb2xkZXItZnJvbnQge1xuICAgICAgICBmaWxsOiBAZm9sZGVyLWNvbG9yO1xuICAgICAgICBzdHJva2U6IEBmb2xkZXItZGFyay1jb2xvcjtcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAxcHg7XG4gICAgICAgIFxuICAgICAgICB0ZXh0IHtcbiAgICAgICAgICAgIGZpbGw6IEBmb2xkZXItdGV4dC1jb2xvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuIyMgRG9jdW1lbnQgSWNvbiBTdHlsZXNcblxuU2ltaWxhcmlseSB0byBmb2xkZXIgaWNvbnMsIHlvdSBjYW4gY3VzdG9taXplIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllcyBmb3IgXG5kb2N1bWVudCBzdHlsZXM6XG5cbi0gRG9jdW1lbnQgY29sb3IgYEBkb2N1bWVudC1jb2xvcmBcbi0gVGl0bGUgY29sb3IgYEBkb2N1bWVudC10aXRsZS1jb2xvcmBcbi0gVGV4dC9jYXB0aW9uIGNvbG9yIGBAZG9jdW1lbnQtdGV4dC1jb2xvcmBcbi0gT3B0aW9uYWxseSB5b3UgY2FuIGRlZmluZSB0aGUgdGl0bGUgdGV4dCBzaXplIHdpdGggYEBkb2N1bWVudC10aXRsZS1zaXplYFxuXG4jIyMgTWl4aW4gRGVmaW5pdGlvblxuKi9cbi5kb2N1bWVudC1zdHlsZXMoQGRvY3VtZW50LWNvbG9yLCBAZG9jdW1lbnQtdGl0bGUtY29sb3IsIEBkb2N1bWVudC10ZXh0LWNvbG9yLFxuICAgIEBkb2N1bWVudC10aXRsZS1zaXplOiAzMnB4KSB7XG4gICAgQGRvY3VtZW50LWRhcmstY29sb3I6IGRhcmtlbihAZG9jdW1lbnQtY29sb3IsIDUlKTtcbiAgICAuZG9jdW1lbnQge1xuICAgICAgICBmaWxsOiBAZG9jdW1lbnQtY29sb3I7XG4gICAgICAgIHN0cm9rZTogQGRvY3VtZW50LWRhcmstY29sb3I7XG4gICAgICAgIHN0cm9rZS13aWR0aDogMXB4O1xuICAgIH1cbiAgICAuZG9jLWJnIHtcbiAgICAgICAgZmlsbDogQGRvY3VtZW50LXRpdGxlLWNvbG9yO1xuICAgICAgICBmb250LXNpemU6IEBkb2N1bWVudC10aXRsZS1zaXplO1xuICAgIH1cbiAgICAuZG9jLXRleHQge1xuICAgICAgICBmaWxsOiBAZG9jdW1lbnQtdGV4dC1jb2xvcjtcbiAgICB9XG59XG4vKipcbiMjIFRlcm1pbmFsIEljb24gU3R5bGVzXG5cblRlcm1pbmFsIGljb24gaGFzIGZvbGxvd2luZyBjdXN0b21pemFibGUgcHJvcGVydGllczpcbi0gQmFja2dyb3VuZCBjb2xvciBgQHRlcm1pbmFsLWJhY2stY29sb3JgXG4tIFRpdGxlYmFyIGNvbG9yICBgQHRlcm1pbmFsLXRpdGxlLWNvbG9yYFxuLSBDb2xvciBvZiB0aGUgdGV4dCBpbnNpZGUgdGVybWluYWwgYEB0ZXJtaW5hbC10ZXh0LWNvbG9yYFxuLSBPcHRpb25hbCBmb250IHNpemUgZm9yIHRlcm1pbmFsIHRleHQgYEB0ZXJtaW5hbC10ZXh0LXNpemVgXG5cbiMjIyBNaXhpbiBEZWZpbml0aW9uXG4qL1xuLnRlcm1pbmFsLXN0eWxlcyhAdGVybWluYWwtYmFjay1jb2xvciwgQHRlcm1pbmFsLXRpdGxlLWNvbG9yLCBcbiAgICBAdGVybWluYWwtdGV4dC1jb2xvciwgQHRlcm1pbmFsLXRleHQtc2l6ZTogMjRweCkge1xuICAgIEB0ZXJtaW5hbC1ib3JkZXItY29sb3I6IGxpZ2h0ZW4oQHRlcm1pbmFsLWJhY2stY29sb3IsIDUwJSk7XG4gICAgQHRlcm1pbmFsLWJ0bi1jb2xvcjogbGlnaHRlbihAdGVybWluYWwtdGl0bGUtY29sb3IsIDIwJSk7XG4gICAgLnRlcm1pbmFsIHtcbiAgICAgICAgc3Ryb2tlOiBAdGVybWluYWwtYm9yZGVyLWNvbG9yO1xuICAgICAgICBmaWxsOiBAdGVybWluYWwtYmFjay1jb2xvcjtcbiAgICAgICAgZWxsaXBzZSAge1xuICAgICAgICAgICAgc3Ryb2tlOiBub25lO1xuICAgICAgICAgICAgZmlsbDogQHRlcm1pbmFsLWJ0bi1jb2xvcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudGVybWluYWwtdGV4dCB7XG4gICAgICAgIGZpbGw6IEB0ZXJtaW5hbC10ZXh0LWNvbG9yO1xuICAgICAgICBmb250LXNpemU6IEB0ZXJtaW5hbC10ZXh0LXNpemU7XG4gICAgfVxuICAgIC50aXRsZS1iYXIge1xuICAgICAgICBzdHJva2U6IG5vbmU7XG4gICAgICAgIGZpbGw6IEB0ZXJtaW5hbC10aXRsZS1jb2xvcjtcbiAgICB9XG59XG4vKipcbiMjIERlZmF1bHQgU3R5bGVzXG4qL1xuLmZpbGUtZGlhZ3JhbSB7XG4gICAgdGV4dCB7XG4gICAgICAgIHN0cm9rZTogbm9uZTtcbiAgICAgICAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBtb25vc3BhY2U7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgdGV4dC1hbmNob3I6IG1pZGRsZTtcbiAgICB9XG4gICAgLmNvbnRhaW5lcjNEID4gKiB7XG4gICAgICAgIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoMTAwcHgpO1xuICAgIH1cbiAgICAuZm9sZGVyLXN0eWxlcygjRUUwLCAjODgwKTtcbiAgICAuZG9jdW1lbnQtc3R5bGVzKCNmOGY4ZmYsICM4QUQsICM4ODkpO1xuICAgIC50ZXJtaW5hbC1zdHlsZXMoIzAwMCwgIzEyRCwgIzFGMik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9*/